flashsort
void flashsort(vector<vObj*> arr,int len){
	//CLASS FORMATION
	double amin=*arr[0];
	int nmax=1;
	const int m=0.42*len;
	int L[m];
	for(int i=0;i<len;i++){
		 if(*arr[i]<amin){amin=*arr[i];}
		 if(*arr[i]>*arr[nmax]){nmax=i+1;}
	}
	if(amin==*arr[nmax-1]){return;}
	double C1=(m-1)/(*arr[nmax-1]-amin);

	for(int k=0;k<m;k++){
		L[k]=0;
	}
	int K;
	for(int i=0;i<len;i++){
		 K=1+(int)(C1*(*arr[i]-amin));
		 L[K-1]=L[K-1]+1;
	}
	for(int k=2;k<=m;k++){
		 L[k-1]=L[k-1] + L[k-2];
	}
	vObj *tmp=arr[nmax-1];
	arr[nmax-1]=arr[0];
	arr[0]=tmp;
	//PERMUTATION
	double NMOVE=0;
	int J=1;
	K=m;
	vObj* FLASH;
	while(NMOVE<len - 1){
		 while(J>L[K-1]){
			++J;
			K=1+(int)(C1*(*arr[J-1]-amin));
		 }
		 FLASH=arr[J-1];
		 while(J!=L[K-1]+1){
			K=1+(int)(C1*(*FLASH - amin));
			tmp=arr[L[K-1]-1];
			arr[L[K-1]-1]=FLASH;
			FLASH=tmp;
			L[K-1]=L[K-1] - 1;
			++NMOVE;
		 }
	}
	//STRAIGHT INSERTION
	for(int i=len-2;i>=1;i--){
		 if(arr[i]<arr[i-1]){
			tmp=arr[i-1];
			J=i;
			while(arr[J]<tmp){
			   arr[J-1]=arr[J];
			   ++J;
			}
			arr[J-1]=tmp;
		 }
	}
}

----------------------------------
formula derivations for old(?) projection
a=acos(z/r)-inc
b=atan(y/x)-az
r=sqrt(x^2+y^2+z^2)

sin(acos(x))=sqrt(1-x^2)
sin(atan(x))=x/sqrt(x^2+1)
cos(atan(x))=1/sqrt(x^2+1)

x=r*sin(a)*cos(b)
x=r*sin(acos(z/r)-inc)*cos(atan(y/x)-az)
x=r*(sin(acos(z/r))*cos(inc)-cos(acos(z/r))*sin(inc))*(cos(atan(y/x))*cos(az)+sin(atan(y/x))*sin(az))
x=r*(sqrt(1-(z/r)^2)*cos(inc)-z/r*sin(inc))*(1/sqrt((y/x)^2+1)*cos(az)+(y/x)/sqrt((y/x)^2+1)*sin(az))
x=(r*sqrt(1-(z/r)^2)*cos(inc)-z*sin(inc))*(cos(az)+y/x*sin(az))/sqrt((y/x)^2+1)
x=(r*z/r*sqrt(1/(z/r)^2-1)*cos(inc)-z*sin(inc))*(cos(az)+y/x*sin(az))/sqrt((y/x)^2+1)
x=z*(sqrt((r^2)/(z^2)-1)*cos(inc)-sin(inc))*(cos(az)+y/x*sin(az))/sqrt((y^2)/(x^2)+1)

y=r*sin(a)*sin(b)
y=r*sin(acos(z/r)-inc)*sin(atan(y/x)-az)
y=r*(sin(acos(z/r))*cos(inc)-cos(acos(z/r))*sin(inc))*(sin(atan(y/x))*cos(az)-cos(atan(y/x))*sin(az))
y=r*(sqrt(1-(z/r)^2)*cos(inc)-z/r*sin(inc))*((y/x)/sqrt((y/x)^2+1)*cos(az)-1/sqrt((y/x)^2+1)*sin(az))
y=(r*sqrt(1-(z/r)^2)*cos(inc)-z*sin(inc))*((y/x)*cos(az)-sin(az))/sqrt((y/x)^2+1)
y=(r*z/r*sqrt(1/(z/r)^2-1)*cos(inc)-z*sin(inc))*((y/x)*cos(az)-sin(az))/sqrt((y/x)^2+1)
y=z*(sqrt((r/z)^2-1)*cos(inc)-sin(inc))*((y/x)*cos(az)-sin(az))/sqrt((y/x)^2+1)
y=z*(sqrt((r^2)/(z^2)-1)*cos(inc)-sin(inc))*((y/x)*cos(az)-sin(az))/sqrt((y/x)^2+1)

z=r*cos(a)
z=r*cos(acos(z/r)-inc)
z=r*(cos(acos(z/r))*cos(inc)+sin(acos(z/r))*sin(inc))
z=r*(z/r*cos(inc)+sqrt(1-(z/r)^2)*sin(inc))
z=(z*cos(inc)+r*sqrt(1-(z/r)^2)*sin(inc))
z=(z*cos(inc)+r*z/r*sqrt(1/(z/r)^2-1)*sin(inc))
z=(z*cos(inc)+z*sqrt((r^2)/(z^2)-1)*sin(inc))
z=z*(cos(inc)+sqrt((r^2)/(z^2)-1)*sin(inc))
z*=(cos(inc)+sqrt((r^2)/(z^2)-1)*sin(inc))
